{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clockTime","Date","timeInterval","this","window","setInterval","setState","props","hasClock","console","info","toUTCString","slice","clearInterval","clockName","className","React","Component","getRandomName","value","now","toString","App","time","clockNameInterval","handlerClick","handlerContext","document","addEventListener","_pp","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"8MAYaA,EAAb,4MACEC,MAAyB,CACvBC,UAAW,IAAIC,MAFnB,EAKEC,aAAe,EALjB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEN,UAAW,IAAIC,OAE3B,EAAKM,MAAMC,UAEbC,QAAQC,KAAK,EAAKX,MAAMC,UAAUW,cAAcC,OAAO,IAAK,MAE7D,OAfP,kCAkBE,WACER,OAAOS,cAAcV,KAAKD,gBAnB9B,oBAsBE,WACE,IAAQY,EAAcX,KAAKI,MAAnBO,UACAd,EAAcG,KAAKJ,MAAnBC,UAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAGF,YAED,sBAAMC,UAAU,cAAhB,SACGf,EAAUW,cAAcC,OAAO,IAAK,YAnC/C,GAA2BI,IAAMC,W,MCRjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GASX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBS,UAAU,EACVM,UAAW,UACXS,KAAM,IAAItB,MAJd,EAOEuB,kBAAoB,EAPtB,EA+BEC,aAAe,WACb,EAAKnB,SAAS,CAAEE,UAAU,KAhC9B,EAmCEkB,eAAiB,WACf,EAAKpB,SAAS,CAAEE,UAAU,KApC9B,uDASE,WAA2B,IAAD,OACxBL,KAAKqB,kBAAoBpB,OAAOC,aAAY,WAC1C,EAAKC,SAAS,CAAEQ,UAAWI,QAC1B,MAEHS,SAASC,iBAAiB,cAAezB,KAAKuB,gBAC9CC,SAASC,iBAAiB,QAASzB,KAAKsB,gBAf5C,gCAkBE,SAAmBI,EAASC,GACtBA,EAAUhB,YAAcX,KAAKJ,MAAMe,WAAaX,KAAKJ,MAAMS,UAE7DC,QAAQsB,MAAR,uBAA8BD,EAAUhB,UAAxC,eAAwDX,KAAKJ,MAAMe,cArBzE,kCAyBE,WACEa,SAASK,oBAAoB,QAAS7B,KAAKsB,cAC3CE,SAASK,oBAAoB,cAAe7B,KAAKuB,gBACjDtB,OAAOS,cAAcV,KAAKqB,qBA5B9B,oBAuCE,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,6CACCZ,KAAKJ,MAAMS,UACV,cAAC,EAAD,CACEA,SAAUL,KAAKJ,MAAMS,SACrBM,UAAWX,KAAKJ,MAAMe,UACtBS,KAAMpB,KAAKJ,MAAMwB,cA/C7B,GAAyBP,IAAMC,WCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.53d35aa2.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  hasClock: boolean,\n  clockName: string,\n  time: Date,\n};\n\ntype State = {\n  clockTime: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    clockTime: new Date(),\n  };\n\n  timeInterval = 0;\n\n  componentDidMount(): void {\n    this.timeInterval = window.setInterval(() => {\n      this.setState({ clockTime: new Date() });\n\n      if (this.props.hasClock) {\n        // eslint-disable-next-line no-console\n        console.info(this.state.clockTime.toUTCString().slice(-12, -4));\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timeInterval);\n  }\n\n  render(): React.ReactNode {\n    const { clockName } = this.props;\n    const { clockTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {clockTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n  time: Date,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    time: new Date(),\n  };\n\n  clockNameInterval = 0;\n\n  componentDidMount(): void {\n    this.clockNameInterval = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handlerContext);\n    document.addEventListener('click', this.handlerClick);\n  }\n\n  componentDidUpdate(_pp: {}, prevState: Readonly<State>): void {\n    if (prevState.clockName !== this.state.clockName && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('click', this.handlerClick);\n    document.removeEventListener('contextmenu', this.handlerContext);\n    window.clearInterval(this.clockNameInterval);\n  }\n\n  handlerClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handlerContext = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && (\n          <Clock\n            hasClock={this.state.hasClock}\n            clockName={this.state.clockName}\n            time={this.state.time}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// imports:\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}